FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Define build arguments for environment variables
ARG VITE_POCKETBASE_URL
ARG POCKETBASE_ADMIN_EMAIL
ARG POCKETBASE_ADMIN_PASSWORD
ARG VITE_RAZORPAY_KEY_ID
ARG RAZORPAY_KEY_SECRET
ARG VITE_SITE_TITLE
ARG VITE_SITE_LOGO
ARG EMAIL_HOST
ARG EMAIL_PORT
ARG EMAIL_USER
ARG EMAIL_PASSWORD
ARG EMAIL_FROM
ARG SMTP_HOST
ARG SMTP_PORT
ARG SMTP_SECURE
ARG SMTP_USER
ARG SMTP_PASSWORD
ARG VITE_GEMINI_API_KEY
ARG VITE_WHATSAPP_API_URL

# Set environment variables for build
ENV VITE_POCKETBASE_URL=$VITE_POCKETBASE_URL
ENV POCKETBASE_ADMIN_EMAIL=$POCKETBASE_ADMIN_EMAIL
ENV POCKETBASE_ADMIN_PASSWORD=$POCKETBASE_ADMIN_PASSWORD
ENV VITE_RAZORPAY_KEY_ID=$VITE_RAZORPAY_KEY_ID
ENV RAZORPAY_KEY_SECRET=$RAZORPAY_KEY_SECRET
ENV VITE_SITE_TITLE=$VITE_SITE_TITLE
ENV VITE_SITE_LOGO=$VITE_SITE_LOGO
ENV EMAIL_HOST=$EMAIL_HOST
ENV EMAIL_PORT=$EMAIL_PORT
ENV EMAIL_USER=$EMAIL_USER
ENV EMAIL_PASSWORD=$EMAIL_PASSWORD
ENV EMAIL_FROM=$EMAIL_FROM
ENV SMTP_HOST=$SMTP_HOST
ENV SMTP_PORT=$SMTP_PORT
ENV SMTP_SECURE=$SMTP_SECURE
ENV SMTP_USER=$SMTP_USER
ENV SMTP_PASSWORD=$SMTP_PASSWORD
ENV VITE_GEMINI_API_KEY=$VITE_GEMINI_API_KEY
ENV VITE_WHATSAPP_API_URL=$VITE_WHATSAPP_API_URL

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy all files to the container
COPY . .

# Build the frontend
RUN npm run build

# Create the server directory structure
RUN npm run build:server

# Second stage: nginx + node runtime
FROM nginx:alpine

# Install Node.js in the nginx image
RUN apk add --update nodejs npm

# Install tsx globally
RUN npm install -g tsx

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create directory for SSL certificates
RUN mkdir -p /etc/nginx/ssl

# Copy frontend build from builder stage
COPY --from=builder /app/dist /app/dist

# Copy server files from builder stage
COPY --from=builder /app/dist-server /app/dist-server

# Copy source files needed for tsx
COPY --from=builder /app/src /app/src

# Copy environment variables
COPY --from=builder /app/.env /app/.env
COPY --from=builder /app/package.json /app/package.json

# Copy the start script
RUN echo '#!/bin/sh\n\
# Start the email server in the background\n\
cd /app && tsx src/server/index.ts &\n\
\n\
# Start the frontend server\n\
cd /app && npx serve -s dist -p 80 &\n\
\n\
# Start nginx in the foreground\n\
nginx -g "daemon off;"\n\
' > /start.sh && chmod +x /start.sh

# Set environment variables
ENV NODE_ENV=production

# Expose ports
EXPOSE 80 443 3001

# Start nginx and node server
CMD ["/start.sh"] 